<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh7gDTAIcAAAAAAIAAAACAAICAAAAAgIAAgACAgMDAwMDcwKbK8AQEBAgICAwMDBERERYWFhwc
        HCIiIikpKVVVVU1NTUJCQjk5Of98gP9QUNYAk8zs/+/Wxufn1q2pkDMAAGYAAJkAAMwAAAAzADMzAGYz
        AJkzAMwzAP8zAABmADNmAGZmAJlmAMxmAP9mAACZADOZAGaZAJmZAMyZAP+ZAADMADPMAGbMAJnMAMzM
        AP/MAGb/AJn/AMz/AAAAMzMAM2YAM5kAM8wAM/8AMwAzMzMzM2YzM5kzM8wzM/8zMwBmMzNmM2ZmM5lm
        M8xmM/9mMwCZMzOZM2aZM5mZM8yZM/+ZMwDMMzPMM2bMM5nMM8zMM//MMzP/M2b/M5n/M8z/M///MwAA
        ZjMAZmYAZpkAZswAZv8AZgAzZjMzZmYzZpkzZswzZv8zZgBmZjNmZmZmZplmZsxmZgCZZjOZZmaZZpmZ
        ZsyZZv+ZZgDMZjPMZpnMZszMZv/MZgD/ZjP/Zpn/Zsz/Zv8AzMwA/wCZmZkzmZkAmcwAmQAAmTMzmWYA
        mcwzmf8AmQBmmTNmmWYzmZlmmcxmmf8zmTOZmWaZmZmZmcyZmf+ZmQDMmTPMmWbMZpnMmczMmf/MmQD/
        mTP/mWbMmZn/mcz/mf//mQAAzDMAmWYAzJkAzMwAzAAzmTMzzGYzzJkzzMwzzP8zzABmzDNmzGZmmZlm
        zMxmzP9mmQCZzDOZzGaZzJmZzMyZzP+ZzADMzDPMzGbMzJnMzMzMzP/MzAD/zDP/zGb/mZn/zMz/zP//
        zDMAzGYA/5kA/wAzzDMz/2Yz/5kz/8wz//8z/wBm/zNm/2ZmzJlm/8xm//9mzACZ/zOZ/2aZ/5mZ/8yZ
        //+Z/wDM/zPM/2bM/5nM/8zM///M/zP//2b/zJn//8z///9mZmb/Zv//ZmZm//9m/2b//6UAIV9fX3d3
        d4aGhpaWlsvLy7KystfX193d3ePj4+rq6vHx8fj4+P/78KCgpICAgP8AAAD/AP//AAAA//8A/wD/////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAA7gDTAAAI/wD/CRxIsKDBgwgTKlzIsKFDhPUy
        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
</value>
  </data>
</root>